[{"title":"行测_判断推理学习(一)：图形推理_位置规律","url":"/2024/04/16/行测-判断推理学习-一-：图形推理-位置规律/","content":"\n识别特征：元素组成相同\n\n# 考点一：平移\n\n方向：直线(上下、左右、斜对角线)、绕圈(顺逆时针)\n\n常见步数：恒定、递增(等差)\n\n# 考点二：旋转、翻转\n\n1.旋转\n方向：顺时针、逆时针\n常见角度45°、90°、180\n\n2.翻转\n左右翻转:竖轴对称\n上下翻转:横轴对称\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["行测 判断推理 图形推理 位置规律"],"categories":["civilStudy"]},{"title":"GAME101_Lecture02学习","url":"/2024/04/16/GAME101-Lecture02学习/","content":"\n# 向量复习\n\n图形学中，未作特殊规定的向量，缺省值（默认值）都是列\n\n![image-20240416184124364](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416184237.png)\n\n- 点积\n- 叉积\n- 正交基与坐标系\n\n\n\n## 点乘\n\n### 点乘基本知识\n\n![image-20240416172958213](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416173005.png)\n\n左下角的公式中：点乘可以快速得到两个向量之间的夹角，特别是在两个向量都只是方向的时候。\n\n右下角的公式中：只要我们做一个反余弦，那就可以得到两个向量之间的夹角。 \n\n![image-20240416181413864](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416181414.png)\n\nA表示一个向量（默认列向量），AT是A向量的转置\n\nA的值可以用红色公式表示。\n\n\n\n### 直角坐标系的点积\n\n![image-20240416173414055](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416173414.png)\n\n#### 图形学应用\n\n![image-20240416173442667](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416173442.png)\n\n- 求两个向量之间的夹角(如光源与表面夹角的余弦)\n- 求一个向量在另一个向量上的投影\n\n\n\n### 投影点积\n\n![image-20240416173507601](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416173507.png)\n\n点乘可以把一个向量任意的进行垂直与平行的分解\n\n上图计算向量b向量a的投影时，b的投影向量  = 向量b的长度 · cosθ · 向量a\n\n#### 图形学作用\n\n![image-20240416173534623](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416173534.png)\n\n- 测量两个方向的距离\n- 分解向量\n- 确定向前/向后\n\n图形学中，可以计算两个向量或两个方向多么接近。主要通过比较点乘结果，可以判断接近还是远离这两个方向。\n\n![image-20240416173926813](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416173926.png)\n\n向量的点乘还可以得到一个前与后的信息。\n\n如图假设向量a给定了某个方向，从a的起点向上为前，向下为后。\n\n向量a与b的点乘会为正数表示其的方向是指向a的前方。向量c反之。\n\n若向量a与某个向量的点乘为0，那么这个向量与向量a垂直。\n\n同理，前面说到点乘可以判断接近还是原理。向量b与向量a越来越远，那么两者的点乘还会越来越等于0（即垂直），随后更远就是与a的方向相反，直到点乘变成-1（此时b与a完全相反）。\n\n\n\n判断两个向量是否接近，其中一个应用——菲涅尔效果（看的角度和面的法线是否重合问题。越重合，说明面是对着相机的。否则面就越侧面（越亮），直到变成负数就是背面了（暗色））\n\n\n\n## 叉乘\n\n### 叉乘基本知识\n\n![image-20240416180608714](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416180608.png)\n\n- 叉积与两个初始向量正交\n- 右手定则确定方向\n- 在构造坐标系中很有用(以后)\n\n右手螺旋定则（有些地方会用左手），可以判断\n\n![image-20240416181639954](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416181640.png)\n\n左侧的公式中，如果在三维坐标系中，x叉乘y是z，那么这个坐标系就是一个右手坐标系。\n\n右侧的公式中，注意向量叉乘自己是0向量。并且叉乘只有反交换律。\n\n![image-20240416182118165](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416182118.png)\n\n在下方的公式，是向量可以写成矩阵的形式，然后向量的叉乘可以转换成矩阵乘以向量\n\n### 图形学的应用\n\n![image-20240416182340467](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416182409.png)\n\n- 确定左/右\n- 确定内部/外部\n\n在图形学中，叉乘一是判断左和右，另一个是判断内和外。\n\n![image-20240416182759510](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416182759.png)\n\n在左图中，向量a叉乘向量b、得到z是正的；向量b叉乘向量a、得到的z是负的。这两种都能证明b在a的左侧。\n\n在右图中，ABC的排布是逆时针，AB叉乘AP和BC叉乘AP、AC叉乘AP的z都是向外的（即AP都在所有边的左侧），这能说明P在ABC的中间。\n\nABC的排布变成顺时针也同理。（此处是对三角形做光栅化的基础，可以判断三角形覆盖了那些像素。若值等于0，即该像素刚好在三角形的边上，那么就自己定义）\n\n## 正交基与坐标系\n\n通过这些向量的乘法，就可以定义坐标系。定义坐标系可以把任意一个向量分解到三个轴上（利用点积算投影，然后用投影分解）\n\n![image-20240416190717359](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416190717.png)\n\n如图，假设将uvw设为一个三维坐标系的坐标轴，它们都是单位向量。\n\n假设有一个向量p。我们可以用投影的方式投影到坐标轴上，直接用点乘的结果就可以立刻得到投影的长度。原因解释如下：\n\n- 先假设向量p投影到u轴上，此时计算向量p在向量u上的投影向量。\n- p在向量u上的投影向量  = 向量p的长度 · cosθ · 向量u\n- 向量p点乘向量u=p的长度 × u的长度 × cosθ。\n- 此时u为单位向量，长度为1。\n- 那么，向量p点乘向量u = u的长度 × cosθ，正好就是其投影长度。\n- （picgo上传出了问题，后面再补坑吧呜呜呜）![image-20240416200321655](C:/Users/14638/AppData/Roaming/Typora/typora-user-images/image-20240416200321655.png)\n\n# 矩阵复习\n\n![image-20240416190822580](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416190822.png)\n\n- 神奇的2D阵列，在每一个CS课程中萦绕\n- 在图形学中，广泛用于表示变换翻译、旋转、剪切、缩放(下一讲更详细)\n\n## 矩阵乘积知识\n\n![image-20240416191421852](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416191421.png)\n\nm\\*n的矩阵 乘以 n\\*p的矩阵 = m\\*p的矩阵\n\n矩阵乘法运算，黑色框框和蓝色框框分别是两个例子：\n\n- 黑色框框的？，是在结果的第一行第二列，那么就去第一个矩阵中找第一行，第二个矩阵中找第二列，(1\\*6)+(3\\*7) = 27\n- 蓝色框框同理，(5\\*4)+(2\\*3) = 26\n\n![image-20240416192400862](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416192400.png)\n\n矩阵没有任何的交换率。结合律比较有用。\n\n![image-20240416192852730](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416192852.png)\n\n- 将向量视为列矩阵(mx1)\n- 转换点的关键(下一讲)\n- 官方剧透:关于y轴的2D反射\n\n 始终认为，矩阵在左边，向量在右边。 \n\n![image-20240416192945749](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416192945.png)\n\n矩阵的变换（转置）\n\n![image-20240416193013912](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416193014.png)\n\n# 矩阵和向量\n\n![image-20240416193056657](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/16/20240416193056.png)\n\n向量在矩阵形式上的计算。\n\n# 总结\n\n这节课主要是对线性代数中向量和矩阵的复习，总体来说难度不大。\n\n1.向量主要是其点乘和叉乘的两种乘法。\n\n- 点乘能够用于计算向量之间的投影和向量之间的夹角，能够判断两向量是否相近（菲涅尔效果）\n- 而向量投影主要能测量两个方向的距离、分解向量以及确定向前/向后等，这些特性能够运用到确定直角坐标系上（即确定基坐标，就是确定一个基准的感觉）\n- 叉乘能够用于确定向量之间的位置关系，左右、内外等。\n- 确定内外在后续光栅化用的会很多，而确定左右的方向好像没有提及运用？？后续有涉及到的话在回来补坑。\n\n2.矩阵则是其乘法计算的一些计算方法。\n\n- 计算机的图形信息基本都是用矩阵存储的，信息与信息的计算后续也会涉及。这里闫老师主要是稍微复习了一下。\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["计算机图形学 GAME101"],"categories":["computerStudy"]},{"title":"GAME101_Lecture01学习","url":"/2024/04/14/GAME101-Lecture01学习/","content":"\n# 系列前言\n\n按照计划，应该是要学习unity shader的技术的。\n\nsiki学院有shader和Shader Graph两方面的学习，其中graphics shader后半部分属于付费课程。秉持着白嫖的心理，想要去研究乐乐老师的《Unity Shader 入门精要》。\n\n乐乐老师的书从评论来说，适合对计算机图形学有一定了解的人。于是根据评论的建议，找到闫老师的GAME101系列课程。\n\n计划在本月（5月前），将系列课程学完，并完成所有的作业。\n\n学习是永无止境的，共勉~\n\n# 笔记\n\n发现的一些好的参考笔记，都放在下面：\n\n[02_Review Of Linear Algebra (yuque.com)](https://www.yuque.com/u21084722/hmh07m/ypaui9)\n\n# 计算机图形学介绍\n\nLecture01主要讲授计算机图形学在生活的运用以及闫老师主要讲授的内容。\n\n这门课程主要分别为光栅化、曲线和曲面、光线追踪和动画/模拟这四个方面的内容。\n\n## 计算机图形学与计算机视觉\n\n可以认为，涉及到一些推测、猜测等方向的，归纳为计算机视觉领域。\n\n以下是老师关于两个领域之间的一个关系图。\n\n![image-20240414212812143](https://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/14/20240414212812.png)\n\n\n\n\n\n\n\n","tags":["计算机图形学 GAME101"],"categories":["computerStudy"]},{"title":"testCivli","url":"/2024/04/14/testCivli/","content":"\nd\n\nddddd\n\nhttps://cdn.jsdelivr.net/gh/Disjoint3/ImgHost@main/Img/2024/04/1420240414162912.png\n","tags":["test"],"categories":["civilStudy"]},{"title":"Shader学习（二）：vs配置","url":"/2024/04/13/Shader学习（二）：vs配置/","content":"\n# Unity中vs的配置\n\n扩展>管理扩展 搜索“Shader”，下载ShaderlabVS插件既可。\n\n注意要将vs关闭再重开。\n\n# 后记\n\n- 后来发现unity这两年已经有了更新的Shader Graph，开始有点纠结是否要继续学习shaderLab还是转战Shader Graph。。。\n- 最后打算还是先学图形学基础，学完对于unity Shader的学习应该会有更多的认识。无论是ShaderLab还是Shader Graph的学习，打算先放一放。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["shader"],"categories":["computerStudy"]},{"title":"Shader学习（一）：基本概念","url":"/2024/04/13/Shader学习（一）：基本概念/","content":"\n# Shader语言\n\n- 计算机的图形渲染，主要由OpenGL或DirectX来完成。\n\n- OpenGl使用的是GLSL sharder语言，DirectX使用的是HLSL sharder语言。\n- 英伟达公司出的CG语言具有跨平台的特性，能够在两个平台上都适用。\n- unity三种Shader语言都可以运行。\n\n# Unity Shader的分类\n\nunity中使用的是ShaderLab编写。ShaderLab是对三种语言进行了重新封装。unity中的Shader分为以下的三类。\n\n## 表面着色器（Surface Shader）\n\n表面着色器是unity对一些Shader进行了封装，比普通的shader书写简单。\n\n可以认为表面着色器是对顶点/片元着色器的封装，实际编译的时候，表面着色器会被转成顶点/片元着色器。\n\n当光源较多时，适合使用表面着色器，unity的表面着色器已经处理了很多的光照细节。\n\n## 顶点/片元着色器（Vertex/Fragment Shader）\n\n基本的着色器。\n\n实现的效果更强大，所有的功能都提供。\n\n## 固定函数着色器（Fixed Function Shader）\n\n在一些旧的设备上特定使用的着色器。目前使用的很少。\n\n\n\n\n\n\n\n\n\n","tags":["shader"],"categories":["computerStudy"]},{"title":"hexo博客搭建","url":"/2024/04/13/hexo博客搭建/","content":"\n# 环境搭建\n\n## 参考文章\n\n搭建环境参考的文章：[【基础篇】hexo博客搭建教程 - huanhao - 博客园 (cnblogs.com)](https://www.cnblogs.com/huanhao/p/hexobase.html)\n\n## 搭建过程中的问题\n\n### cnpm淘宝镜像地址的更换\n\n这是原文中提供的命令和地址：\n\n```\n$ npm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n\n在操作过程中，该地址已于2022年6月30日更改：\n\n```\nhttps://registry.npm.taobao.org => https://registry.npmmirror.com\n```\n\n### github配置\n\ngithub为仓库配置ssh时，若本地的ssh文件夹没有config文件，可能会出现配置失败问题。\n\n新建config.txt文件，将下面的命令直接粘贴进去，保存去掉后缀即可\n\n```\nHost github.com\n  Hostname ssh.github.com\n  Port 443\n```\n\n# 图床搭建\n\n环境搭建的大佬也有提及图床的搭建，推荐了Picee。Picee时chrome的插件，电脑主要使用的edge，无意为此专门下载一个chrome，因此在知乎上找到了其他的方法。\n\n## 参考文章\n\n[如何用github搭建图床（亲测有效）_github图床-CSDN博客](https://blog.csdn.net/xdnxl/article/details/129466060)\n\n## 搭建遇到的问题\n\n使用的是picgo。刚开始选择的是最新的beta版本，结果上传不上去。\n\n后来在参考文章里，换成了2.3.1版本。并且根据文章说的，关闭steam++，结果就上传成功了。。。也不知是steam++的问题还是版本的问题。。。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["hexo"],"categories":["computerStudy"]},{"title":"前言","url":"/2024/04/13/前言/","content":"\n第一次按照教程搭建自己的博客，感谢大佬的教程。教程链接：[【基础篇】hexo博客搭建教程 - huanhao - 博客园 (cnblogs.com)](https://www.cnblogs.com/huanhao/p/hexobase.html)\n\n博客用的是hexo搭建的，主题则是github上一位大佬开源的主题：https://github.com/hooozen/hexo-theme-tranquility.git\n\n越学习越发现世界之大，我们只是茫茫人海中小小的一个。大一的时候是在CSDN等上面写的文章，到了大三才想起要自己的博客，也不知会否为时已晚？\n\n但只要想做，什么时候都不算晚吧。\n","tags":["杂项"],"categories":["life"]}]